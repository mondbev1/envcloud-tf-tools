FROM alpine:3.15

LABEL maintainer="shai@goperfectmatch.com"
SHELL ["/bin/sh", "-c"]
ENV GLIBC_VER=2.31-r0

# install glibc compatibility for alpine
RUN apk --no-cache add \
        binutils \
        curl bash bash-completion pkgconfig \
    && curl -sL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub \
    && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-${GLIBC_VER}.apk \
    && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-bin-${GLIBC_VER}.apk \
    && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-i18n-${GLIBC_VER}.apk \
    && apk add --no-cache \
        glibc-${GLIBC_VER}.apk \
        glibc-bin-${GLIBC_VER}.apk \
        glibc-i18n-${GLIBC_VER}.apk \
    && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \
    && curl -sL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip \
    && unzip awscliv2.zip \
    && aws/install \
    && rm -rf \
        awscliv2.zip \
        aws \
        /usr/local/aws-cli/v2/current/dist/aws_completer \
        /usr/local/aws-cli/v2/current/dist/awscli/data/ac.index \
        /usr/local/aws-cli/v2/current/dist/awscli/examples \
        glibc-*.apk \
    && find /usr/local/aws-cli/v2/current/dist/awscli/botocore/data -name examples-1.json -delete \
    && apk add --no-cache \
    python3 py3-pip \
    wget \
    git zip unzip jq ncurses \
    && apk --no-cache del \
        binutils \
    && rm -rf /var/cache/apk/*

ARG user=shai
ARG home=/home/$user
RUN addgroup -S docker
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home $home \
    --ingroup docker \
    $user

RUN curl -sLO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && \
    rm -f kubectl 

RUN curl -s "https://get.helm.sh/helm-v3.7.2-linux-amd64.tar.gz" -o "helm.tar.gz" && \
        tar -zxf helm.tar.gz && \
        mv linux-amd64/helm /usr/local/bin/ && \
        chmod +x /usr/local/bin/helm && \
        rm -rf linux-amd64 && \
        rm -f helm.tar.gz

RUN curl -s "https://releases.hashicorp.com/terraform/1.1.4/terraform_1.1.4_linux_amd64.zip" -o "terraform.zip" && \
        unzip terraform.zip && \
        mv terraform /usr/local/bin/terraform && \
        chmod +x /usr/local/bin/terraform && \
        rm -rf terraform.zip

RUN curl -sL "https://github.com/gruntwork-io/terragrunt/releases/download/v0.35.16/terragrunt_linux_amd64" -o /usr/local/bin/tg && \
        chmod +x /usr/local/bin/tg 

RUN git clone https://github.com/ahmetb/kubectx.git /opt/.kubectx && \
        mv /opt/.kubectx/kubectx /opt/.kubectx/kctx && \
        mv /opt/.kubectx/kubens /opt/.kubectx/kns && \
        COMPDIR=$(pkg-config --variable=completionsdir bash-completion) && \
        ln -sf /opt/.kubectx/completion/kubens.bash $COMPDIR/kns && \
        ln -sf /opt/.kubectx/completion/kubectx.bash $COMPDIR/kctx

WORKDIR $home
USER $user

COPY --chown=$user start.sh .
RUN chmod +x start.sh
ENTRYPOINT ["./start.sh"]
